using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    public class Item<T>
    {
        public T Value { get; set; }
        public Item<T> Next { get; set; }
        public Item<T> Previous { get; set; }
    }
    class MyLinkedList<T> : IEnumerable<T>
    {
        public Item<T> Head { get; set; }
        Item<T> Tail { get; set; }
        public void AddLast(T value)//  добавить в конец
        {
            if (Head == null)
                Tail = Head = new Item<T> { Value = value, Next = null, Previous = null };
            else
            {
                var item = new Item<T> { Value = value, Next = null };
                var c = Tail;
                c.Next = item;
                item.Previous = c;
                Tail = item;

                // добавить previous
            }
        }

        public void AddBetween(Item<T> prev, Item<T> next, Item<T> yourElement)// вставка между двумя
        {
            var c = yourElement.Previous;                                               // заменить названия с и d !!!!!
            var d = yourElement.Next;
            c.Next = d;
            d.Previous = c;   // открепилась ссылка указывающая На наш элемент 
            yourElement.Next = next;
            yourElement.Previous = prev;
            prev.Next = yourElement;
            next.Previous = yourElement; // закрепили элемент на новое место
        }

        public IEnumerator<T> GetEnumerator()
        {
            throw new NotImplementedException();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }
    }



    class Program
    {
       
        static void Main(string[] args)
       {

            var j = new int[] { 345, 546, 1, 3, 5, 7, 2 }; //, 8, 9, 3, 7, 9, 45, 9, 5, 7, 97, 6, 56, 345, 2, 7, 3, 7, 8, 3, 8, 99, 45, 57, 8, 46, 57, 80, 7 };
            var jsf = new MyLinkedList<int>();

            foreach (var e in j)
            {
                jsf.AddLast(e);
            }

            var watch = new Stopwatch();
            watch.Start();
            var i = ShellSortList(jsf);
            watch.Stop();
            var h = jsf.Head;
            Console.WriteLine("Отсортированный массив: ");
            for (int y = 0; y < 6; y++)
            {
                Console.Write(h.Value + " ");
                h = h.Next;
            }
            Console.WriteLine("Length: " + 7 + "   Time: " + watch + "   Iteration: " + i);

        }

        static int ShellSortList(MyLinkedList<int> list) // d- это шаг, на который сдвигается элемент 
        {
            int i = 0;
            var c = list.Head.Next;
            while (c != null)
            { 
                var e = c.Previous;
                while (e != null && c.Value < e.Value)
                {
                    list.AddBetween(e, e.Next, c);
                    e = e.Previous;
                    i += 1;
                }
                
                c = c.Next;
                i += 1;
            }
            return i;
        }

    }
}          
